--- orginal/usbasp.c	2014-11-20 23:49:14.000000000 +0100
+++ usbasp.c	2020-08-01 10:34:57.456546545 +0200
@@ -120,6 +120,7 @@
   int sckfreq_hz;
   unsigned int capabilities;
   int use_tpi;
+  int sck_3mhz;
 };
 
 #define PDATA(pgm) ((struct pdata *)(pgm->cookie))
@@ -570,6 +571,7 @@
     pdata->capabilities = 0;
 
   pdata->use_tpi = ((pdata->capabilities & USBASP_CAP_TPI) != 0 && (p->flags & AVRPART_HAS_TPI) != 0) ? 1 : 0;
+  pdata->sck_3mhz = ((pdata->capabilities & USBASP_CAP_3MHZ) != 0) ? 1 :0;	//support for 3 MHz SCK in UsbAsp-flash firmware
 
   if(pdata->use_tpi)
   {
@@ -836,6 +838,7 @@
 
 /* The list of SCK frequencies in Hz supported by USBasp */
 static struct sckoptions_t usbaspSCKoptions[] = {
+  { USBASP_ISP_SCK_3000, 3000000 },
   { USBASP_ISP_SCK_1500, 1500000 },
   { USBASP_ISP_SCK_750, 750000 },
   { USBASP_ISP_SCK_375, 375000 },
@@ -880,20 +883,33 @@
     int usefreq = 0;
 
     avrdude_message(MSG_NOTICE2, "%s: try to set SCK period to %g s (= %i Hz)\n", progname, sckperiod, sckfreq);
-
-    if (sckfreq >= usbaspSCKoptions[0].frequency) {
-      clockoption = usbaspSCKoptions[0].id;
-      usefreq = usbaspSCKoptions[0].frequency;
+	
+	/* Check if programmer is capable of 3 MHz SCK, if not then ommit 3 MHz setting */
+	int i;
+	if((PDATA(pgm)->sck_3mhz)) {
+	  avrdude_message(MSG_NOTICE2, "%s: connected USBasp is capable of 3 MHz SCK\n",progname);
+	  i=0;
+	} else {
+	  avrdude_message(MSG_NOTICE2, "%s: connected USBasp is not cabable of 3 MHz SCK\n",progname);
+	  i=1;
+	}
+    if (sckfreq >= usbaspSCKoptions[i].frequency) {
+      clockoption = usbaspSCKoptions[i].id;
+      usefreq = usbaspSCKoptions[i].frequency;
     } else {
 
       /* find clock option next to given clock */
-      int i;
+      
       for (i = 0; i < sizeof(usbaspSCKoptions) / sizeof(usbaspSCKoptions[0]); i++) {
-        if (sckfreq >= usbaspSCKoptions[i].frequency - 1) { /* subtract 1 to compensate round errors */
-          clockoption = usbaspSCKoptions[i].id;
-          usefreq = usbaspSCKoptions[i].frequency;
-          break;
-        }
+		  if(((PDATA(pgm)->sck_3mhz)==0) && (usbaspSCKoptions[i].frequency == 3000000)) 
+			  /* ommit 3 MHz if not capable */ ;
+		  else {
+        	if (sckfreq >= usbaspSCKoptions[i].frequency - 1) { /* subtract 1 to compensate round errors */
+          	clockoption = usbaspSCKoptions[i].id;
+          	usefreq = usbaspSCKoptions[i].frequency;
+          	break;
+        	}
+		  }
       }
     }
 
--- orginal/usbasp.h	2014-05-28 22:36:58.000000000 +0200
+++ usbasp.h	2020-08-01 10:32:21.276541130 +0200
@@ -42,6 +42,7 @@
 
 /* USBASP capabilities */
 #define USBASP_CAP_TPI    0x01
+#define USBASP_CAP_3MHZ   0x1<<24	//3 MHz SCK in UsbAsp-flash firmware
 
 /* Block mode flags */
 #define USBASP_BLOCKFLAG_FIRST    1
@@ -65,6 +66,7 @@
 #define USBASP_ISP_SCK_375    10  /* 375 kHz   */
 #define USBASP_ISP_SCK_750    11  /* 750 kHz   */
 #define USBASP_ISP_SCK_1500   12  /* 1.5 MHz   */
+#define USBASP_ISP_SCK_3000   13  /*   3 MHz   only UsbAsp-flash firmware*/
 
 /* TPI instructions */
 #define TPI_OP_SLD      0x20
